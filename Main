--Hey there! I have worked very hard on this script so yeah i obfuscated it!
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = {'\27','\76','\117','\97','\81','\0','\1','\4','\8','\4','\8','\0','\10','\0','\0','\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\5','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\2','\5','\0','\0','\0','\5','\0','\0','\0','\65','\64','\0','\0','\28','\128','\0','\1','\28','\64','\128','\0','\30','\0','\128','\0','\2','\0','\0','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\108','\111','\97','\100','\115','\116','\114','\105','\110','\103','\0','\4','\195','\25','\0','\0','\0','\0','\0','\0','\45','\45','\32','\71','\117','\105','\32','\116','\111','\32','\76','\117','\97','\10','\45','\45','\32','\86','\101','\114','\115','\105','\111','\110','\58','\32','\51','\46','\50','\10','\10','\45','\45','\32','\73','\110','\115','\116','\97','\110','\99','\101','\115','\58','\10','\10','\108','\111','\99','\97','\108','\32','\116','\112','\117','\105','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\101','\101','\110','\71','\117','\105','\34','\41','\10','\108','\111','\99','\97','\108','\32','\70','\114','\97','\109','\101','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\70','\114','\97','\109','\101','\34','\41','\10','\108','\111','\99','\97','\108','\32','\84','\101','\120','\116','\66','\111','\120','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\111','\120','\34','\41','\10','\108','\111','\99','\97','\108','\32','\85','\73','\67','\111','\114','\110','\101','\114','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\85','\73','\67','\111','\114','\110','\101','\114','\34','\41','\10','\108','\111','\99','\97','\108','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\10','\108','\111','\99','\97','\108','\32','\85','\73','\67','\111','\114','\110','\101','\114','\95','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\85','\73','\67','\111','\114','\110','\101','\114','\34','\41','\10','\108','\111','\99','\97','\108','\32','\84','\101','\120','\116','\76','\97','\98','\101','\108','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\76','\97','\98','\101','\108','\34','\41','\10','\108','\111','\99','\97','\108','\32','\85','\73','\67','\111','\114','\110','\101','\114','\95','\51','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\85','\73','\67','\111','\114','\110','\101','\114','\34','\41','\10','\108','\111','\99','\97','\108','\32','\99','\108','\111','\115','\101','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\10','\108','\111','\99','\97','\108','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\34','\41','\10','\108','\111','\99','\97','\108','\32','\85','\73','\67','\111','\114','\110','\101','\114','\95','\52','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\85','\73','\67','\111','\114','\110','\101','\114','\34','\41','\10','\10','\45','\45','\80','\114','\111','\112','\101','\114','\116','\105','\101','\115','\58','\10','\10','\116','\112','\117','\105','\46','\78','\97','\109','\101','\32','\61','\32','\34','\116','\112','\117','\105','\34','\10','\116','\112','\117','\105','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\87','\97','\105','\116','\70','\111','\114','\67','\104','\105','\108','\100','\40','\34','\80','\108','\97','\121','\101','\114','\71','\117','\105','\34','\41','\10','\116','\112','\117','\105','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\69','\110','\117','\109','\46','\90','\73','\110','\100','\101','\120','\66','\101','\104','\97','\118','\105','\111','\114','\46','\83','\105','\98','\108','\105','\110','\103','\10','\116','\112','\117','\105','\46','\82','\101','\115','\101','\116','\79','\110','\83','\112','\97','\119','\110','\32','\61','\32','\102','\97','\108','\115','\101','\10','\10','\70','\114','\97','\109','\101','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\116','\112','\117','\105','\10','\70','\114','\97','\109','\101','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\57','\48','\44','\32','\57','\48','\44','\32','\57','\48','\41','\10','\70','\114','\97','\109','\101','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\56','\53','\51','\55','\55','\51','\53','\51','\44','\32','\48','\44','\32','\48','\46','\50','\55','\48','\54','\48','\54','\53','\49','\56','\44','\32','\48','\41','\10','\70','\114','\97','\109','\101','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\51','\53','\44','\32','\48','\44','\32','\50','\57','\53','\41','\10','\10','\84','\101','\120','\116','\66','\111','\120','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\97','\109','\101','\10','\84','\101','\120','\116','\66','\111','\120','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\84','\101','\120','\116','\66','\111','\120','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\48','\48','\48','\48','\48','\48','\48','\51','\44','\32','\48','\44','\32','\48','\46','\52','\49','\51','\53','\53','\57','\51','\49','\56','\44','\32','\48','\41','\10','\84','\101','\120','\116','\66','\111','\120','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\48','\44','\32','\48','\44','\32','\53','\48','\41','\10','\84','\101','\120','\116','\66','\111','\120','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\84','\101','\120','\116','\66','\111','\120','\46','\67','\108','\101','\97','\114','\84','\101','\120','\116','\79','\110','\70','\111','\99','\117','\115','\32','\61','\32','\102','\97','\108','\115','\101','\10','\84','\101','\120','\116','\66','\111','\120','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\84','\101','\120','\116','\66','\111','\120','\46','\80','\108','\97','\99','\101','\104','\111','\108','\100','\101','\114','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\49','\55','\56','\44','\32','\49','\55','\56','\44','\32','\49','\55','\56','\41','\10','\84','\101','\120','\116','\66','\111','\120','\46','\80','\108','\97','\99','\101','\104','\111','\108','\100','\101','\114','\84','\101','\120','\116','\32','\61','\32','\34','\85','\115','\101','\114','\110','\97','\109','\101','\34','\10','\84','\101','\120','\116','\66','\111','\120','\46','\84','\101','\120','\116','\32','\61','\32','\34','\34','\10','\84','\101','\120','\116','\66','\111','\120','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\84','\101','\120','\116','\66','\111','\120','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\84','\101','\120','\116','\66','\111','\120','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\84','\101','\120','\116','\66','\111','\120','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\85','\73','\67','\111','\114','\110','\101','\114','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\84','\101','\120','\116','\66','\111','\120','\10','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\97','\109','\101','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\48','\48','\48','\48','\48','\48','\48','\51','\44','\32','\48','\44','\32','\48','\46','\54','\55','\55','\57','\54','\54','\49','\49','\56','\44','\32','\48','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\48','\44','\32','\48','\44','\32','\53','\48','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\84','\101','\120','\116','\32','\61','\32','\34','\84','\80','\34','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\85','\73','\67','\111','\114','\110','\101','\114','\95','\50','\46','\67','\111','\114','\110','\101','\114','\82','\97','\100','\105','\117','\115','\32','\61','\32','\85','\68','\105','\109','\46','\110','\101','\119','\40','\48','\46','\48','\55','\57','\57','\57','\57','\57','\57','\56','\50','\44','\32','\48','\41','\10','\85','\73','\67','\111','\114','\110','\101','\114','\95','\50','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\10','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\97','\109','\101','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\50','\48','\48','\48','\48','\48','\48','\48','\51','\44','\32','\48','\44','\32','\48','\46','\49','\48','\53','\48','\56','\52','\55','\52','\55','\44','\32','\48','\41','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\48','\44','\32','\48','\44','\32','\53','\48','\41','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\77','\101','\114','\114','\105','\119','\101','\97','\116','\104','\101','\114','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\84','\101','\120','\116','\32','\61','\32','\34','\86','\101','\114','\105','\102','\105','\101','\100','\115','\32','\84','\80','\32','\85','\73','\34','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\85','\73','\67','\111','\114','\110','\101','\114','\95','\51','\46','\67','\111','\114','\110','\101','\114','\82','\97','\100','\105','\117','\115','\32','\61','\32','\85','\68','\105','\109','\46','\110','\101','\119','\40','\48','\46','\48','\55','\57','\57','\57','\57','\57','\57','\56','\50','\44','\32','\48','\41','\10','\85','\73','\67','\111','\114','\110','\101','\114','\95','\51','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\97','\109','\101','\10','\10','\99','\108','\111','\115','\101','\46','\78','\97','\109','\101','\32','\61','\32','\34','\99','\108','\111','\115','\101','\34','\10','\99','\108','\111','\115','\101','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\97','\109','\101','\10','\99','\108','\111','\115','\101','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\99','\108','\111','\115','\101','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\84','\114','\97','\110','\115','\112','\97','\114','\101','\110','\99','\121','\32','\61','\32','\49','\46','\48','\48','\48','\10','\99','\108','\111','\115','\101','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\46','\56','\53','\54','\55','\49','\54','\51','\57','\52','\44','\32','\48','\44','\32','\48','\44','\32','\48','\41','\10','\99','\108','\111','\115','\101','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\52','\56','\44','\32','\48','\44','\32','\53','\48','\41','\10','\99','\108','\111','\115','\101','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\99','\108','\111','\115','\101','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\99','\108','\111','\115','\101','\46','\84','\101','\120','\116','\32','\61','\32','\34','\88','\34','\10','\99','\108','\111','\115','\101','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\99','\108','\111','\115','\101','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\99','\108','\111','\115','\101','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\99','\108','\111','\115','\101','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\116','\112','\117','\105','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\66','\97','\99','\107','\103','\114','\111','\117','\110','\100','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\50','\53','\53','\44','\32','\50','\53','\53','\44','\32','\50','\53','\53','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\48','\44','\32','\48','\46','\52','\54','\48','\51','\52','\50','\49','\51','\57','\44','\32','\48','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\50','\48','\48','\44','\32','\48','\44','\32','\53','\48','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\83','\111','\117','\114','\99','\101','\83','\97','\110','\115','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\84','\101','\120','\116','\32','\61','\32','\34','\79','\112','\101','\110','\32','\85','\73','\34','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\84','\101','\120','\116','\67','\111','\108','\111','\114','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\102','\114','\111','\109','\82','\71','\66','\40','\48','\44','\32','\48','\44','\32','\48','\41','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\84','\101','\120','\116','\83','\99','\97','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\84','\101','\120','\116','\83','\105','\122','\101','\32','\61','\32','\49','\52','\46','\48','\48','\48','\10','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\84','\101','\120','\116','\87','\114','\97','\112','\112','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\10','\85','\73','\67','\111','\114','\110','\101','\114','\95','\52','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\10','\10','\45','\45','\32','\83','\99','\114','\105','\112','\116','\115','\58','\10','\10','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\77','\81','\86','\79','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\40','\41','\32','\45','\45','\32','\70','\114','\97','\109','\101','\46','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\44','\32','\70','\114','\97','\109','\101','\41','\10','\10','\9','\108','\111','\99','\97','\108','\32','\116','\115','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\84','\119','\101','\101','\110','\83','\101','\114','\118','\105','\99','\101','\34','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\83','\105','\122','\101','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\44','\48','\44','\32','\50','\57','\53','\41','\10','\9','\10','\9','\119','\97','\105','\116','\40','\50','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\58','\84','\119','\101','\101','\110','\83','\105','\122','\101','\40','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\51','\53','\44','\48','\44','\32','\50','\57','\53','\41','\41','\10','\9','\116','\97','\115','\107','\46','\119','\97','\105','\116','\40','\49','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\84','\101','\120','\116','\66','\111','\120','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\99','\108','\111','\115','\101','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\108','\111','\99','\97','\108','\32','\85','\73','\83','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\39','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\39','\41','\10','\9','\108','\111','\99','\97','\108','\32','\102','\114','\97','\109','\101','\32','\61','\32','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\10','\9','\108','\111','\99','\97','\108','\32','\100','\114','\97','\103','\84','\111','\103','\103','\108','\101','\32','\61','\32','\110','\105','\108','\10','\9','\108','\111','\99','\97','\108','\32','\100','\114','\97','\103','\83','\112','\101','\101','\100','\32','\61','\32','\48','\46','\50','\53','\10','\9','\108','\111','\99','\97','\108','\32','\100','\114','\97','\103','\83','\116','\97','\114','\116','\32','\61','\32','\110','\105','\108','\10','\9','\108','\111','\99','\97','\108','\32','\115','\116','\97','\114','\116','\80','\111','\115','\32','\61','\32','\110','\105','\108','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\117','\112','\100','\97','\116','\101','\73','\110','\112','\117','\116','\40','\105','\110','\112','\117','\116','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\100','\101','\108','\116','\97','\32','\61','\32','\105','\110','\112','\117','\116','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\45','\32','\100','\114','\97','\103','\83','\116','\97','\114','\116','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\115','\116','\97','\114','\116','\80','\111','\115','\46','\88','\46','\83','\99','\97','\108','\101','\44','\32','\115','\116','\97','\114','\116','\80','\111','\115','\46','\88','\46','\79','\102','\102','\115','\101','\116','\32','\43','\32','\100','\101','\108','\116','\97','\46','\88','\44','\10','\9','\9','\9','\115','\116','\97','\114','\116','\80','\111','\115','\46','\89','\46','\83','\99','\97','\108','\101','\44','\32','\115','\116','\97','\114','\116','\80','\111','\115','\46','\89','\46','\79','\102','\102','\115','\101','\116','\32','\43','\32','\100','\101','\108','\116','\97','\46','\89','\41','\10','\9','\9','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\39','\84','\119','\101','\101','\110','\83','\101','\114','\118','\105','\99','\101','\39','\41','\58','\67','\114','\101','\97','\116','\101','\40','\102','\114','\97','\109','\101','\44','\32','\84','\119','\101','\101','\110','\73','\110','\102','\111','\46','\110','\101','\119','\40','\100','\114','\97','\103','\83','\112','\101','\101','\100','\41','\44','\32','\123','\80','\111','\115','\105','\116','\105','\111','\110','\32','\61','\32','\112','\111','\115','\105','\116','\105','\111','\110','\125','\41','\58','\80','\108','\97','\121','\40','\41','\10','\9','\101','\110','\100','\10','\9','\10','\9','\102','\114','\97','\109','\101','\46','\73','\110','\112','\117','\116','\66','\101','\103','\97','\110','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\105','\110','\112','\117','\116','\41','\10','\9','\9','\105','\102','\32','\40','\105','\110','\112','\117','\116','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\32','\111','\114','\32','\105','\110','\112','\117','\116','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\84','\111','\117','\99','\104','\41','\32','\116','\104','\101','\110','\32','\10','\9','\9','\9','\100','\114','\97','\103','\84','\111','\103','\103','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\9','\9','\100','\114','\97','\103','\83','\116','\97','\114','\116','\32','\61','\32','\105','\110','\112','\117','\116','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\9','\9','\9','\115','\116','\97','\114','\116','\80','\111','\115','\32','\61','\32','\102','\114','\97','\109','\101','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\9','\9','\9','\105','\110','\112','\117','\116','\46','\67','\104','\97','\110','\103','\101','\100','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\9','\9','\9','\9','\105','\102','\32','\105','\110','\112','\117','\116','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\116','\97','\116','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\116','\97','\116','\101','\46','\69','\110','\100','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\9','\100','\114','\97','\103','\84','\111','\103','\103','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\41','\10','\9','\9','\101','\110','\100','\10','\9','\101','\110','\100','\41','\10','\9','\10','\9','\85','\73','\83','\46','\73','\110','\112','\117','\116','\67','\104','\97','\110','\103','\101','\100','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\105','\110','\112','\117','\116','\41','\10','\9','\9','\105','\102','\32','\105','\110','\112','\117','\116','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\77','\111','\117','\115','\101','\77','\111','\118','\101','\109','\101','\110','\116','\32','\111','\114','\32','\105','\110','\112','\117','\116','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\84','\111','\117','\99','\104','\32','\116','\104','\101','\110','\10','\9','\9','\9','\105','\102','\32','\100','\114','\97','\103','\84','\111','\103','\103','\108','\101','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\117','\112','\100','\97','\116','\101','\73','\110','\112','\117','\116','\40','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\101','\110','\100','\10','\9','\101','\110','\100','\41','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\119','\114','\97','\112','\40','\77','\81','\86','\79','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\41','\40','\41','\10','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\81','\69','\76','\85','\89','\88','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\40','\41','\32','\45','\45','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\46','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\44','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\41','\10','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\116','\112','\40','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\116','\98','\32','\61','\32','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\46','\84','\101','\120','\116','\66','\111','\120','\46','\84','\101','\120','\116','\10','\9','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\49','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\50','\32','\61','\32','\116','\98','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\111','\115','\32','\61','\32','\112','\49','\46','\67','\70','\114','\97','\109','\101','\10','\9','\10','\9','\9','\112','\49','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\91','\112','\50','\93','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\67','\70','\114','\97','\109','\101','\10','\9','\101','\110','\100','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\116','\112','\41','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\119','\114','\97','\112','\40','\81','\69','\76','\85','\89','\88','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\41','\40','\41','\10','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\78','\70','\66','\80','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\40','\41','\32','\45','\45','\32','\84','\101','\120','\116','\76','\97','\98','\101','\108','\46','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\44','\32','\84','\101','\120','\116','\76','\97','\98','\101','\108','\41','\10','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\82','\111','\98','\111','\116','\111','\77','\111','\110','\111','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\119','\114','\97','\112','\40','\78','\70','\66','\80','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\41','\40','\41','\10','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\71','\86','\72','\74','\77','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\40','\41','\32','\45','\45','\32','\99','\108','\111','\115','\101','\46','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\44','\32','\99','\108','\111','\115','\101','\41','\10','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\82','\111','\98','\111','\116','\111','\77','\111','\110','\111','\10','\9','\108','\111','\99','\97','\108','\32','\116','\115','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\84','\119','\101','\101','\110','\83','\101','\114','\118','\105','\99','\101','\34','\41','\10','\9','\108','\111','\99','\97','\108','\32','\102','\114','\97','\109','\101','\32','\61','\32','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\10','\9','\108','\111','\99','\97','\108','\32','\111','\112','\101','\110','\101','\114','\32','\61','\32','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\46','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\100','\101','\108','\101','\116','\101','\40','\41','\10','\9','\9','\102','\114','\97','\109','\101','\58','\84','\119','\101','\101','\110','\83','\105','\122','\101','\40','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\44','\48','\44','\32','\50','\57','\53','\41','\41','\10','\9','\9','\116','\97','\115','\107','\46','\119','\97','\105','\116','\40','\49','\41','\10','\9','\9','\102','\114','\97','\109','\101','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\9','\111','\112','\101','\110','\101','\114','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\101','\110','\100','\10','\9','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\100','\101','\108','\101','\116','\101','\41','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\119','\114','\97','\112','\40','\71','\86','\72','\74','\77','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\41','\40','\41','\10','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\77','\85','\73','\83','\84','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\40','\41','\32','\45','\45','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\46','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\44','\32','\84','\101','\120','\116','\66','\117','\116','\116','\111','\110','\95','\50','\41','\10','\10','\9','\108','\111','\99','\97','\108','\32','\116','\115','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\84','\119','\101','\101','\110','\83','\101','\114','\118','\105','\99','\101','\34','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\70','\111','\110','\116','\32','\61','\32','\69','\110','\117','\109','\46','\70','\111','\110','\116','\46','\82','\111','\98','\111','\116','\111','\77','\111','\110','\111','\10','\9','\108','\111','\99','\97','\108','\32','\102','\114','\97','\109','\101','\32','\61','\32','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\111','\112','\101','\110','\40','\41','\10','\9','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\46','\70','\114','\97','\109','\101','\58','\84','\119','\101','\101','\110','\83','\105','\122','\101','\40','\85','\68','\105','\109','\50','\46','\110','\101','\119','\40','\48','\44','\32','\51','\51','\53','\44','\48','\44','\32','\50','\57','\53','\41','\41','\10','\9','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\80','\97','\114','\101','\110','\116','\46','\70','\114','\97','\109','\101','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\116','\114','\117','\101','\10','\9','\9','\116','\97','\115','\107','\46','\119','\97','\105','\116','\40','\49','\41','\10','\9','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\86','\105','\115','\105','\98','\108','\101','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\101','\110','\100','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\77','\111','\117','\115','\101','\66','\117','\116','\116','\111','\110','\49','\67','\108','\105','\99','\107','\58','\67','\111','\110','\110','\101','\99','\116','\40','\111','\112','\101','\110','\41','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\119','\114','\97','\112','\40','\77','\85','\73','\83','\84','\95','\102','\97','\107','\101','\95','\115','\99','\114','\105','\112','\116','\41','\40','\41','\10','\0','\0','\0','\0','\0','\5','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0'}local IlIIlIlIIIlllIlIlIIlIlIlIlIIIlIIIII = {
"ABC",  "ABx", "ABC",  "ABC",
"ABC",  "ABx", "ABC",  "ABx", 
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "AsBx", "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "AsBx",
"AsBx", "ABC", "ABC", "ABC",
"ABx",  "ABC",}
local llllIIlIllIIlIllIIllIlIlIIlIIIllIlI = {
"MOVE",     "LOADK",     "LOADBOOL", "LOADNIL",
"GETUPVAL", "GETGLOBAL", "GETTABLE", "SETGLOBAL",
"SETUPVAL", "SETTABLE",  "NEWTABLE", "SELF",
"ADD",      "SUB",       "MUL",      "DIV",
"MOD",      "POW",       "UNM",      "NOT",
"LEN",      "CONCAT",    "JMP",      "EQ",
"LT",       "LE",        "TEST",     "TESTSET",
"CALL",     "TAILCALL",  "RETURN",   "FORLOOP",
"FORPREP",  "TFORLOOP",  "SETLIST",  "CLOSE",
"CLOSURE",  "VARARG"
};
local function get_bits(input, n, n2)
if n2 then
local total = 0
local digitn = 0
for i = n, n2 do
total = total + 2^digitn*get_bits(input, i)
digitn = digitn + 1
end
return total
else
local pn = 2^(n-1)
return (input % (pn + pn) >= pn) and 1 or 0
end
end
local function lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local index = 1
local big_endian = false
local int_size;
local size_t;
local get_int, get_size_t;
local get_int8, get_int32, get_int64, get_float64, get_string;
do
function get_int8()
local a = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:byte(index, index);
index = index + 1
return a
end
function get_int32()
local a, b, c, d = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:byte(index, index + 3);
index = index + 4;
return d*16777216 + c*65536 + b*256 + a
end
function get_int64()
local a = get_int32();
local b = get_int32();
return b*4294967296 + a;
end
function get_float64()
local a = get_int32()
local b = get_int32()
return (-2*get_bits(b, 32)+1)*(2^(get_bits(b, 21, 31)-1023))*
((get_bits(b, 1, 20)*(2^32) + a)/(2^52)+1)
end
function get_string(len)
local str;
if len then
str = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:sub(index, index + len - 1);
index = index + len;
else
len = get_size_t();
if len == 0 then return; end
str = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:sub(index, index + len - 1);
index = index + len;
end
return str;
end
end
local function decode_chunk()
local chunk;
local instructions = {};
local constants    = {};
local prototypes   = {};
local debug = {
lines = {};
};
chunk = {
instructions = instructions;
constants    = constants;
prototypes   = prototypes;
debug = debug;
};
local num;
chunk.name       = get_string();
chunk.first_line = get_int();
chunk.last_line  = get_int();
if chunk.name then chunk.name = chunk.name:sub(1, -2); end
chunk.upvalues  = get_int8();
chunk.arguments = get_int8();
chunk.varg      = get_int8();
chunk.stack     = get_int8();
do
num = get_int();
for i = 1, num do
local instruction = {
};
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI   = get_int32();
local opcode = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 1, 6);
local type   = IlIIlIlIIIlllIlIlIIlIlIlIlIIIlIIIII[opcode + 1];
instruction.opcode = opcode;
instruction.type   = type;
instruction.A = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 7, 14);
if type == "ABC" then
instruction.B = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 24, 32);
instruction.C = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 23);
elseif type == "ABx" then
instruction.Bx = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 32);
elseif type == "AsBx" then
instruction.sBx = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 32) - 131071;
end
instructions[i] = instruction;
end
end
do
num = get_int();
for i = 1, num do
local constant = {
};
local type = get_int8();
constant.type = type;
if type == 1 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = (get_int8() ~= 0);
elseif type == 3 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = get_float64();
elseif type == 4 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = get_string():sub(1, -2);
end
constants[i-1] = constant;
end
end
do
num = get_int();
for i = 1, num do
prototypes[i-1] = decode_chunk();
end
end
do
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = debug.lines
num = get_int();
for i = 1, num do
llIIlIlIIllllIlIlIlIIlIlIlIllllIllI[i] = get_int32();
end
num = get_int();
for i = 1, num do
get_string():sub(1, -2);
get_int32();
get_int32();
end
num = get_int();
for i = 1, num do
get_string();
end
end
return chunk;
end
do
assert(get_string(4) == "\27Lua", "S1MPLYS3C7RED: Bytecode expected");
assert(get_int8() == 0x51, "S1MPLYS3C7RED: Only lua5.1 is supported");
get_int8();
big_endian = (get_int8() == 0);
int_size = get_int8();
size_t   = get_int8();
if int_size == 4 then
get_int = get_int32;
elseif int_size == 8 then
get_int = get_int64;
else
error("");
end
if size_t == 4 then
get_size_t = get_int32;
elseif size_t == 8 then
get_size_t = get_int64;
else
error("");
end
assert(get_string(3) == "\4\8\0","S1MPLYS3C7RED: Unsupported platform");
end
return decode_chunk();
end
local function handle_return(...)
local c = select("#", ...)
local t = {...}
return c, t
end
local function IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI, upvalues)
local instructions = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.instructions;
local constants    = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.constants;
local prototypes   = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.prototypes;

local stack, top
local environment
local IP = 1;
local vararg, vararg_size 

local opcode_funcs = {
[0]  = function(instruction)
stack[instruction.A] = stack[instruction.B];
end,
[1]  = function(instruction)
stack[instruction.A] = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
end,
[2]  = function(instruction)
stack[instruction.A] = instruction.B ~= 0
if instruction.C ~= 0 then
IP = IP + 1
end
end,
[3]  = function(instruction)
local stack = stack
for i = instruction.A, instruction.B do
stack[i] = nil
end
end,
[4] = function(instruction)
stack[instruction.A] = upvalues[instruction.B]
end,
[5]  = function(instruction)
local key = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
stack[instruction.A] = environment[key];
end,
[6]  = function(instruction)
local C = instruction.C
local stack = stack
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
stack[instruction.A] = stack[instruction.B][C];
end,
[7]  = function(instruction)
local key = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
environment[key] = stack[instruction.A];
end,
[8] = function (instruction)
upvalues[instruction.B] = stack[instruction.A]
end,
[9] = function (instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A][B] = C
end,
[10] = function (instruction)
stack[instruction.A] = {}
end,
[11] = function (instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
B = stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
stack[A+1] = B
stack[A]   = B[C]
end,
[12] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B+C;
end,
[13] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B - C;	
end,
[14] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B * C;
end,
[15] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B / C;
end,
[16] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B % C;		
end,
[17] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B ^ C;		
end,
[18] = function(instruction)
stack[instruction.A] = -stack[instruction.B]
end,
[19] = function(instruction)
stack[instruction.A] = not stack[instruction.B]
end,
[20] = function(instruction)
stack[instruction.A] = #stack[instruction.B]
end,
[21] = function(instruction)
local B = instruction.B
local result = stack[B]
for i = B+1, instruction.C do
result = result .. stack[i] 
end
stack[instruction.A] = result
end,
[22] = function(instruction)
IP = IP + instruction.sBx
end,
[23] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B == C) ~= A then
IP = IP + 1
end
end,
[24] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B < C) ~= A then
IP = IP + 1
end		
end,
[25] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B <= C) ~= A then
IP = IP + 1
end		
end,
[26] = function(instruction)
if stack[instruction.A] == (instruction.C ~= 0) then
IP = IP + 1
end
end,
[27] = function(instruction)
local stack = stack
local B = stack[instruction.B]
if B == (instruction.C ~= 0) then
IP = IP + 1
else
stack[instruction.A] = B
end
end,
[28] = function(instruction)
local A = instruction.A;
local B = instruction.B;
local C = instruction.C;
local stack = stack;
local args, results;
local limit, loop
args = {};
if B ~= 1 then
if B ~= 0 then
limit = A+B-1;
else
limit = top
end
loop = 0
for i = A+1, limit do
loop = loop + 1
args[loop] = stack[i];
end
limit, results = handle_return(stack[A](unpack(args, 1, limit-A)))
else
limit, results = handle_return(stack[A]())
end
top = A - 1
if C ~= 1 then
if C ~= 0 then
limit = A+C-2;
else
limit = limit+A
end
loop = 0;
for i = A, limit do
loop = loop + 1;
stack[i] = results[loop];
end
end
end,
[29] = function (instruction)
local A = instruction.A;
local B = instruction.B;
local C = instruction.C;
local stack = stack;
local args, results;
local top, limit, loop = top
args = {};
if B ~= 1 then
if B ~= 0 then
limit = A+B-1;
else
limit = top
end
loop = 0
for i = A+1, limit do
loop = loop + 1
args[#args+1] = stack[i];
end
results = {stack[A](unpack(args, 1, limit-A))};
else
results = {stack[A]()};
end
return true, results
end,
[30] = function(instruction)
local A = instruction.A;
local B = instruction.B;
local stack = stack;
local limit;
local loop, IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI;
if B == 1 then
return true;
end
if B == 0 then
limit = top
else
limit = A + B - 2;
end
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = {};
local loop = 0
for i = A, limit do
loop = loop + 1
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI[loop] = stack[i];
end
return true, IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI;
end,
[31] = function(instruction)
local A = instruction.A
local stack = stack
local step = stack[A+2]
local index = stack[A] + step 
stack[A] = index
if step > 0 then
if index <= stack[A+1] then
IP = IP + instruction.sBx
stack[A+3] = index
end
else
if index >= stack[A+1] then
IP = IP + instruction.sBx
stack[A+3] = index
end
end
end,
[32] = function(instruction)
local A = instruction.A
local stack = stack
stack[A] = stack[A] - stack[A+2]
IP = IP + instruction.sBx 
end,
[33] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
local offset = A+2
local result = {stack[A](stack[A+1], stack[A+2])}
for i = 1, C do
stack[offset+i] = result[i]
end
if stack[A+3] ~= nil then
stack[A+2] = stack[A+3]
else
IP = IP + 1
end
end,
[34] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
if C == 0 then
error("NYI: extended SETLIST")
else
local offset = (C - 1) * 50
local t = stack[A]
if B == 0 then
B = top
end
for i = 1, B do
t[offset+i] = stack[A+i]	
end				
end
end,
[35] = function(instruction)
io.stderr:write("NYI: CLOSE")
io.stderr:flush()
end,
[36] = function(instruction)
local proto = prototypes[instruction.Bx]
local instructions = instructions
local stack = stack
local indices = {}
local new_upvals = setmetatable({},
{
__index = function(t, k)
local upval = indices[k]
return upval.segment[upval.offset]
end,
__newindex = function(t, k, v)
local upval = indices[k]
upval.segment[upval.offset] = v
end
}
)
for i = 1, proto.upvalues do
local movement = instructions[IP]
if movement.opcode == 0 then
indices[i-1] = {segment = stack, offset = movement.B}
elseif instructions[IP].opcode == 4 then
indices[i-1] = {segment = upvalues, offset = movement.B}
end
IP = IP + 1
end
local _, func = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(proto, new_upvals)
stack[instruction.A] = func
end,
[37] = function(instruction)
local A = instruction.A
local B = instruction.B
local stack, vararg = stack, vararg

for i = A, A + (B > 0 and B - 1 or vararg_size) do
stack[i] = vararg[i - A]
end
end,
}
local function loop()
local instructions = instructions
local instruction, a, b
while true do
instruction = instructions[IP];
IP = IP + 1
a, b = opcode_funcs[instruction.opcode](instruction);
if a then
return b;
end
end
end
local IIIIIIIlIlIIlllIIlIlIIIllIIlIIIlIlI = {
get_stack = function()
return stack;
end;
get_IP = function()
return IP;
end
};
local function func(...)
local local_stack = {};
local ghost_stack = {};
top = -1
stack = setmetatable(local_stack, {
__index = ghost_stack;
__newindex = function(t, k, v)
if k > top and v then
top = k
end
ghost_stack[k] = v
end;
})
local args = {...};	
vararg = {}
vararg_size = select("#", ...) - 1
for i = 0, vararg_size do
local_stack[i] = args[i+1];
vararg[i] = args[i+1]
end
environment = getfenv();
IP = 1;
local thread = coroutine.create(loop)
local a, b = coroutine.resume(thread)
if a then
if b then
return unpack(b);
end
return;
else
local name = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.name;
local line = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.debug.lines[IP];
local err  = b:gsub("(.-:)", "");
local IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = "";
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. (name and name .. ":" or "");
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. (line and line .. ":" or "");
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. b
error(IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI, 0);
end
end
return IIIIIIIlIlIIlllIIlIlIIIllIIlIIIlIlI, func;
end
local lIlIlIlIlIllIIIllIlIIlllIIlllIlIIII = {
IlIIIIIIlIllIIlIlIIIllIllIIlllIllll = function(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local IIllIlIIIlIlllllIIIlIIlllllIllllIlI = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll);
local _, func = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI);
return func;
end;
utils = {
lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll;
IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl;
IlllIIIllIlllIlIIIllllIIllllIIllllI = function(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local IIllIlIIIlIlllllIIIlIIlllllIllllIlI = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
return IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI);
end;
};
}
lIlIlIlIlIllIIIllIlIIlllIIlllIlIIII.IlIIIIIIlIllIIlIlIIIllIllIIlllIllll(table.concat(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, [[]]))()
